
@{
    ViewData["Title"] = "Address";
}

<h1>Address</h1>
<select id="selectCity"></select>
<select id="selectDistrict"></select>
<select id="selectRoad"></select>

<div id="div1" class="alert alert-info"> </div>@*看有沒有抓到city的value*@

@section Scripts{

    <script>
        const selCity = document.querySelector('#selectCity');
        const selDist = document.querySelector('#selectDistrict');
        const selRoad = document.querySelector('#selectRoad');

        const theDiv = document.querySelector('#div1');

        //改寫async await fetch loadCity()
        //function loadCity() {
        //    const xhr = new XMLHttpRequest();
        //    xhr.open('GET', '@Url.Content("/api/Cities")');
        //    xhr.send();
        //    xhr.addEventListener('load', () => {
        //        const datas = JSON.parse(xhr.responseText);/*現在這邊回來的資料是Json格式，我們看不懂，所以要轉譯*/
        //        const cities = datas.map(city => `<option value='${city}'>${city}</option>`)/*因為這邊回來的東西很簡單可以省略很多，連return都可省*/
        //        selCity.innerHTML = cities.join("");

        //        loadDistrict()//為了要確保city資料讀完(才可以選擇到讀出來的資料，讓他自動生成鄉鎮區的select)，所以要放在city的load事件裡面確保已經讀完了才執行這個動作
        //    })
        //}

        async function loadCity(){
            const response = await fetch('@Url.Content("/api/Cities")')
            const datas = await response.json()
            const cities = datas.map(city => `<option value='${city}'>${city}</option>`)
            selCity.innerHTML = cities.join("");
            loadDistrict()
        }

        //改寫async await fetch loadDistrict()
        //function loadDistrict() {
        //    const xhr = new XMLHttpRequest();
        //    xhr.open('GET', `@Url.Content("/api/Districts")?city=${selCity.value}`);
        //    xhr.send();
        //    xhr.addEventListener('load', () => {
        //        const datas = JSON.parse(xhr.responseText);
        //        const districts = datas.map(district => `<option value='${district}'>${district}</option>`)
        //        selDist.innerHTML = districts.join("");
        //        loadRoad();
        //    })
        //}
        async function loadDistrict() {
            const response = await fetch(`@Url.Content("/api/Districts")?city=${selCity.value}`)
            const datas=await response.json()
            const districts = datas.map(district => `<option value='${district}'>${district}</option>`)
            selDist.innerHTML = districts.join("");
            loadRoad();
        }

        //改寫async await fetch loadRoad()
        //function loadRoad() {
        //    const xhr = new XMLHttpRequest();
        //    xhr.open('GET', `@Url.Content("/api/roads")?siteId=${selDist.value}`);
        //    xhr.send();
        //    xhr.addEventListener('load', () => {
        //        const datas = JSON.parse(xhr.responseText);
        //        const roads = datas.map(road => `<option value='${road}'>${road}</option>`)
        //        selRoad.innerHTML = roads.join("");
        //        show()//因為會連動，所以直接在這邊show就可以印出目前select裡面的字
        //    })
        //}
        async function loadRoad(){
            const response = await fetch(`@Url.Content("/api/roads")?siteId=${selDist.value}`)
            const datas=await response.json()
            const roads = datas.map(road => `<option value='${road}'>${road}</option>`)
            selRoad.innerHTML = roads.join("");
            show()
        }

        loadCity()

        selCity.addEventListener('change', () => {
            //  theDiv.textContent = `${selCity.options[selCity.selectedIndex].text}-${selCity.options[selCity.selectedIndex].value} `//正統要這樣抓資料比較嚴謹(?)，但下面是方便的方式
            //theDiv.textContent = selCity.value;
            loadDistrict();
        })

        selDist.addEventListener('change', () => {
            //theDiv.textContent = selDist.value;
            loadRoad();
        })
        selRoad.addEventListener('change', () => {
            show()
        })

        //解決show()的問題
        function show() {
            theDiv.textContent = `${selDist.value} ${selRoad.value}`;
        }

    </script>
}

@section Styles{

}