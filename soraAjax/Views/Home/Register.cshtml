
@{
    ViewData["Title"] = "Register";
}

<h1>Register</h1>

<div class="row">
    <div class="col-1"></div>
    <div class="col-6">
        @*<form action="~/api/getdemo" method="post" enctype="application/x-www-form-urlencoded">method不寫的話預設是GET*@

            <form id="form1">@*使用FormData傳送表單*@
                @*接下來要用設定XMLHttpRequest屬性的方式來設定POST*@
            <div class="mb-3">
                <label for="userName" class="form-label">User Name：</label> @*for與下面的input id相同，可以點上面的label文字就將游標移到input裡*@
                <input type="text" class="form-control" id="userName" name="Name"><span id="nameWarn" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label for="userEmail" class="form-label">User Email：</label> 
                <input type="text" class="form-control" id="userEmail" name="Email">@*要注意這邊要跟Model裡面名稱一樣*@
            </div>
            <div class="mb-3">
                <label for="userAge" class="form-label">User Age：</label>
                <input type="number" class="form-control" id="userAge" name="Age">
            </div>
            <div class="mb-3">
                <label for="formFile" class="form-label">Photo：</label>
                <input class="form-control" type="file" id="formFile" name="file">@*這邊是要接收整個檔案資訊給IFormFile file*@
            </div>
            <button id="btnSub" type="submit" class="btn btn-primary">送出</button>
            @*送出後可以F12在NETWORK中看到Request URL已經轉到/api/getdemo
            Request Method是POST
            Content-Type 預設application/x-www-form-urlencoded
            payload可以看到傳遞的封包
            *@
        </form>
        <div class="alert alert-info" id="div1"></div>
    </div>
    <div class="col-3">
        <a href="https://www.ispan.com.tw" id="a1">ispan</a>
        <div>
            <p>預覽圖片</p><img src="" id="previewPic" class="img-thumbnail"></img>
        </div>
    </div>
</div>

@section Styles{
    <style></style>
}

@section Scripts{
    <script>
        const btn = document.querySelector('#btnSub');
        const txtName = document.querySelector('#userName')
        const txtAge = document.querySelector('#userAge')
        const theDiv = document.querySelector('#div1')

        const theA = document.querySelector('#a1')

        const nameCheck = document.querySelector('#userName')

        btn.addEventListener('click', event => {
            event.preventDefault(); //防止預設行為的發生 這邊是防止用預設的GET方式傳資料出去
            //const xhr = new XMLHttpRequest();
            ////關於路徑 前面加~只有RAZOR看得懂 ~/代表這個網站專案的根目錄(因為一個伺服器上可能會有很多不同網站，伺服器根目錄!=網站根目錄)
            //// xhr.open('GET', '/api/index');  //開發時不會錯，佈署到伺服器上就會有可能出錯
            //// xhr.open('GET', '~/api/index'); //一定不可以(因為JS看不懂)
            ////建議要用下面的兩種寫法來產生路徑
            ////   xhr.open('GET','@Url.Action("index","api")') 但是要記哪個位置要代哪個參數很不方便
            //xhr.open('POST', '@Url.Content("~/api/Register")')//這個方法比較直覺，直接把路徑丟進去讓他自動生成就好
            ////step1 open中第一參數改為POST，第二參數則放要執行的action
            ////xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')//step2 在open send間設定setRequestHeader的屬性(上面現在預設是GET)
            ////xhr.send(`name=${txtName.value}&age=${txtAge.value}`);//step3 要傳送到伺服器端的資料放到send裡面
            ////改用FormData
            //const formData = new FormData(document.querySelector('#form1'))//直接找form物件塞進去
            //xhr.send(formData);//再把這個物件直接送出
            //xhr.addEventListener('load', () => {
            //    const data = xhr.responseText;
            //    theDiv.innerHTML = data;
            //})

            //改用 fetch 傳送FormData到server端
            const formData = new FormData(document.querySelector('#form1'));
            fetch('@Url.Content("~/api/register")', {//body傳要傳出的資料，formData要用POST方式傳出
                body:formData,
                method:'POST',
            }).then(Response=>{//再看傳出資料後回應的結果
                if (Response.ok) {
                    alert("新增成功")
                    location.href = '@Url.Content("~/Members/index")'//重新將網址轉移到
                } else {
                    alert("有錯誤!!")
                }
            })

        })

        //防止預設行為的發生preventDefault
        theA.addEventListener('click', event => {
            if (!window.confirm("真的要去嗎??")) {
                event.preventDefault();
            }
        })

        nameCheck.addEventListener('blur',(e)=>{
            const name=e.target.value
            const xhr=new XMLHttpRequest();
                xhr.open('GET', `/api/CheckName?name=${name}`);
                xhr.send();

                xhr.addEventListener('load',()=>{
                    const data=xhr.responseText;
                    const warn = document.querySelector("#nameWarn")
                if (data=='true'){
                    warn.textContent = '此名稱已有人使用'
                }
                else{
                    warn.textContent='此名稱可使用'
                }
            })
        })

        const preview = document.querySelector('#previewPic');
        const uploadPic = document.querySelector('#formFile');
        //加入圖片預覽功能 參考http://disq.us/t/4bah53h

            var fileReader = new FileReader();//用fileReader來做圖片網址，先做個fileReader物件

        uploadPic.addEventListener('change', function (event) {//當有上傳圖片的時候判定是否有成功上傳圖片
            if (this.files.length>0){//如果有上傳檔案大小會產生變化
                fileReader.readAsDataURL(this.files[0]);//readAsDataURL()	是一個帶有表示文件數據的 URL 的 result字符串。data:
            }

            fileReader.addEventListener("load", function (event) {//為了確保圖片上傳完成並且自動生產URL，所以用load事件來將
                preview.src = this.result;//這邊的this是fileReader
            });

        })



    </script>
}